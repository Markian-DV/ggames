#pragma checksum "C:\Users\38050\Downloads\WebApplication2 (1)\WebApplication2\WebApplication2\Pages\rules.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4baa113feba7562aed5bec94780034a56b4c4dfe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(WebApplication2.Pages.Pages_rules), @"mvc.1.0.razor-page", @"/Pages/rules.cshtml")]
namespace WebApplication2.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\38050\Downloads\WebApplication2 (1)\WebApplication2\WebApplication2\Pages\_ViewImports.cshtml"
using WebApplication2;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4baa113feba7562aed5bec94780034a56b4c4dfe", @"/Pages/rules.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"538f37ef395561d5f352aabc9fc72bce1358fc6b", @"/Pages/_ViewImports.cshtml")]
    public class Pages_rules : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("signInModal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("signUpModal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("form1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("display: none"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4baa113feba7562aed5bec94780034a56b4c4dfe5117", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <title>About</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6"" crossorigin=""anonymous"">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: sans-serif;
        }

        a {
            text-decoration: none;
        }

        header {
            font-size: 1.7rem;
        }

        main {
            margin-top: 86px;
        }

        input {
            outline: 0;
            font-family: inherit;
            font-size: inherit;
            vertical-align: middle;
        }

        ul {
            margin-bottom: 0;
        }

        p {
            margin: 0;
        }

        .pageHeader {
            position: fixed;
            z-index: 26;
            box-shadow: 0 2px 2px 0 rgb(0 0 0 /");
                WriteLiteral(@" 10%);
            border-bottom: 1px solid #ccc;
            top: 0;
            width: 100%;
            height: 56px;
            background: #fff;
            box-sizing: border-box;
            display: block;
        }

        .overLayer {
            top: 0;
            width: 100%;
            height: 56px;
            background: #fff;
            position: absolute;
            left: 0;
            margin: 0;
        }

        .pageWrap {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: 0 0;
            position: relative;
            max-width: 1212px;
            height: 100%;
            margin: 0 auto;
        }

        .logo {
            margin-right: 40px;
        }

        #logo {
            display: inline-block;
            width: 132px;
            height: 35px;
            background-repeat: no-repeat;
            background-image: url(./TemplateData/ava.png);
    ");
                WriteLiteral(@"        background-size: 70% 100%;
        }

        .navContainer {
            position: relative;
            margin-right: auto;
        }

        .mainMenu {
            margin: 0;
            line-height: 1.3;
        }

        .expandingMenuList {
            font-size: 0;
        }

            .expandingMenuList > li {
                position: relative;
                font-size: 16px;
            }

                .expandingMenuList > li:before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 100%;
                    width: 100%;
                    height: 2px;
                    background-color: black;
                    transition: all .25s ease;
                    transform-origin: top;
                    transform: scaleY(0);
                }

                .expandingMenuList > li:hover:before {
                    transform: scaleY(1);
                }

        ");
                WriteLiteral(@".header-nav_element {
            font-size: 16px;
            display: inline-block;
            list-style: none;
            vertical-align: middle;
            margin: 0;
        }

        .textLogo {
            color: #444;
            position: relative;
            z-index: 1;
            display: block;
            cursor: pointer;
            font-style: italic;
        }

            .textLogo > span {
                position: relative;
                z-index: 1;
                display: block;
                box-sizing: border-box;
                -moz-box-sizing: border-box;
                height: 56px;
                background: #fff;
                padding: 1.2em .7em 0;
            }

        .expandingMenuTrigger {
            display: none;
        }

        .choose {
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .choose > .input-form {
                margin: 15px 10px;
");
                WriteLiteral(@"            }

        .disabled {
            pointer-events: none;
            opacity: .5;
        }

            .disabled > a {
                color: lightgrey;
            }

        .userInfo_userName {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .userInfo {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

            .userInfo > p:first-child {
                margin-right: 5px;
            }




        /* Post */

        html {
            font-size: 10px;
            font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif;
        }

        main {
            margin: 0 auto;
            max-width: 750px;
            padding: 1.5rem;
        }

        a {
            color: #3a729c;
            text-decoration: none;
        }

        .post-container {
            margin-top: 10rem;
            bac");
                WriteLiteral(@"kground-color: lightgray;
            border-radius: .3rem;
            overflow: hidden;
            padding: 3rem;
        }

        .post-preview-component {
            width: 100%;
        }

            .post-preview-component:not(:last-child) p {
                margin-bottom: 3rem;
            }

        .post-preview-image {
            position: center;
            display: flex;
            margin-bottom: 3rem;
            padding-bottom: 56.25%;
        }

        .post-preview-thumbnail {
            position: absolute;
            width: 100%;
            height: 100%;
            -o-object-fit: cover;
            object-fit: cover;
        }

        .post-preview-titlecontainer {
            display: flex;
            align-items: center;
            font-weight: 600;
            font-size: 1.8rem;
            color: #26211b;
            margin: 0;
            padding: 0;
        }

        .post-preview-title {
            font-size: 2.4rem;

       ");
                WriteLiteral(@" }

        .post-preview-meta-component {
            align-items: center;
            color: #8b8987;
            display: flex;
            flex-wrap: wrap;
            font-size: 1.3rem;
        }

        .post-preview-meta {
            margin-top: .5rem;
        }

        .post-preview-meta-title {
            background-color: #b33430;
            border-radius: .3rem;
            color: #fff;
            font-size: .9rem;
            font-weight: 600;
            line-height: 1;
            padding: .2rem .3rem;
            margin-right: .3rem;
        }

        .post-preview-meta-username {
            color: #8b8987;
            font-weight: 600;
        }

        .post-preview-meta-time {
            display: flex;
            align-items: center;
        }

        .post-preview-meta-separator {
            padding: 0 .4rem;
        }

        .post-preview-meta-content {
            margin-left: .4rem;
        }

        .post-preview-excerpt {
    ");
                WriteLiteral(@"        display: -webkit-box;
            -webkit-line-clamp: 3;
            overflow: hidden;
            text-overflow: ellipsis;
            max-height: 6rem;
            word-break: break-word;
            font-size: 1.4rem;
            line-height: 2rem;
            margin-top: .5rem;
            color: #312e2b;
        }

        .btn {
            font-size: 1.7rem;
        }
        .post-preview-thumbnail {
            width: 401px;
            height: 401px;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4baa113feba7562aed5bec94780034a56b4c4dfe14120", async() => {
                WriteLiteral(@"
    <header class=""pageHeader"">
        <div class=""overLayer""></div>

        <div class=""pageWrap"">
            <div class=""logo"">
                <a onclick=""EbaloGeki()"" id=""logo""></a>
            </div>

            <div class=""navContainer"">
                <nav class=""mainMenu "">
                    <ul class=""expandingMenuList"">
                        <li class=""header-nav_element playBtn disabled"" onclick=""StartPlay()"">
                            <a class=""textLogo"">
                                <span>Play</span>
                            </a>
                        </li>
                        <li class=""header-nav_element"">
                            <a class=""textLogo"">
                                <span>Rules</span>
                            </a>
                        </li>
                        <li class=""header-nav_element"" onclick=""StartAbout()"">
                            <a class=""textLogo"">
                                <span>Info</span>
     ");
                WriteLiteral(@"                       </a>
                        </li>
                    </ul>
                </nav>
            </div>

            <button type=""button"" class=""btn btn-primary userAuthorization"" data-bs-toggle=""modal"" data-bs-target=""#exampleModal"">
                Sign-In
            </button>

            <div class=""userInfo"" style=""display: none"">
                <p class=""userInfo_userName""></p>

                <button type=""button"" class=""btn btn-warning"" onclick=""SignOut()"">Sign Out</button>
            </div>
        </div>
    </header>


    <div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-body"">

                    <div class=""choose"">
                        <div class=""input-form"">
                            <button type=""button"" class=""btn btn-primary choose_sign-in disabled"" onclick=""F1()""");
                WriteLiteral(@">Sign-In</button>
                        </div>
                        <div class=""input-form"">
                            <button type=""button"" class=""btn btn-primary choose_sign-up"" onclick=""F3()"">Sign-Up</button>
                        </div>
                    </div>

                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4baa113feba7562aed5bec94780034a56b4c4dfe16889", async() => {
                    WriteLiteral(@"
                        <div class=""form-floating mb-3"">
                            <input type=""email"" class=""form-control"" name=""email"" id=""floatingSignInUserNameInput"" placeholder=""name@example.com"">
                            <label for=""floatingSignInUserNameInput"">Email</label>
                        </div>

                        <div class=""form-floating mb-3"">
                            <input type=""password"" class=""form-control"" name=""password"" id=""floatingSignInPasswordInput"" placeholder=""name@example.com"">
                            <label for=""floatingSignInPasswordInput"">Password</label>
                        </div>

                        <button type=""submit"" class=""btn btn-success"" style=""width: 100%"">Sign In</button>
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4baa113feba7562aed5bec94780034a56b4c4dfe19201", async() => {
                    WriteLiteral(@"
                        <div class=""form-floating mb-3"">
                            <input type=""text"" class=""form-control"" name=""username"" id=""floatingSignUpUserNameInput"" placeholder=""name@example.com"">
                            <label for=""floatingSignUpUserNameInput"">User Name</label>
                        </div>

                        <div class=""form-floating mb-3"">
                            <input type=""email"" class=""form-control"" name=""email"" id=""floatingSignUpEmailInput"" placeholder=""name@example.com"">
                            <label for=""floatingSignUpEmailInput"">Email</label>
                        </div>

                        <div class=""form-floating mb-3"">
                            <input type=""password"" class=""form-control"" name=""password"" id=""floatingSigUpnPasswordInput"" placeholder=""name@example.com"">
                            <label for=""floatingSignUpPasswordInput"">Password</label>
                        </div>

                        <button type=""sub");
                    WriteLiteral("mit\" class=\"btn btn-success\" style=\"width: 100%\">Sign Up</button>\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
            </div>
        </div>
    </div>


    <main>

        <div class=""post-container"">
            <acticle class=""post-preview-component"">
                <a href=""#"" class=""post-preview-image"">
                    <img src=""https://images.chesscomfiles.com/uploads/v1/images_users/tiny_mce/erik/phpHLaEcZ.gif"" class=""post-preview-thumbnail"" >
                </a>
                <h2 class=""post-preview-titlecontainer"">
                    <a href=""#"" class=""post-preview-title"">King moves</a>
                </h2>
                <p class=""post-preview-excerpt"">
                    King can move exactly one square horizontally, vertically, or diagonally. At most once in every game, each king is allowed to make a special move, known as castling.
                </p>
            </acticle>
            <acticle class=""post-preview-component"">
                <a href=""#"" class=""post-preview-image"">
                    <img src=""https://images.chesscomfiles.co");
                WriteLiteral(@"m/uploads/v1/images_users/tiny_mce/erik/phpgpXYlQ.gif"" class=""post-preview-thumbnail"">
                </a>
                <h2 class=""post-preview-titlecontainer"">
                    <a href=""#"" class=""post-preview-title"">Queen moves</a>
                </h2>
                <p class=""post-preview-excerpt"">
                    Queen can move any number of vacant squares diagonally, horizontally, or vertically.
                </p>
            </acticle>
            <acticle class=""post-preview-component"">
                <a href=""#"" class=""post-preview-image"">
                    <img src=""https://images.chesscomfiles.com/uploads/v1/images_users/tiny_mce/erik/phpHlPkaE.gif"" class=""post-preview-thumbnail"">
                </a>
                <h2 class=""post-preview-titlecontainer"">
                    <a href=""#"" class=""post-preview-title"">Rook moves</a>
                </h2>
                <p class=""post-preview-excerpt"">
                    Rook can move any number of vacant squares vert");
                WriteLiteral(@"ically or horizontally. It also is moved while castling.
                </p>
            </acticle>
            <acticle class=""post-preview-component"">
                <a href=""#"" class=""post-preview-image"">
                    <img src=""https://images.chesscomfiles.com/uploads/v1/images_users/tiny_mce/erik/phpOYVVvo.gif"" class=""post-preview-thumbnail"">
                </a>
                <h2 class=""post-preview-titlecontainer"">
                    <a href=""#"" class=""post-preview-title"">Bishop moves</a>
                </h2>
                <p class=""post-preview-excerpt"">
                    Bishop can move any number of vacant squares in any diagonal direction.
                </p>
            </acticle>
            <acticle class=""post-preview-component"">
                <a href=""#"" class=""post-preview-image"">
                    <img src=""https://images.chesscomfiles.com/uploads/v1/images_users/tiny_mce/erik/phpMl2vJy.gif"" class=""post-preview-thumbnail"">
                </a>
         ");
                WriteLiteral(@"       <h2 class=""post-preview-titlecontainer"">
                    <a href=""#"" class=""post-preview-title"">Knight moves</a>
                </h2>
                <p class=""post-preview-excerpt"">
                    Knight can move one square along any rank or file and then at an angle. The knight´s movement can also be viewed as an “L” or “7″ laid out at any horizontal or vertical angle.
                </p>
            </acticle>
            <acticle class=""post-preview-component"">
                <a href=""#"" class=""post-preview-image"">
                    <img src=""https://images.chesscomfiles.com/uploads/v1/images_users/tiny_mce/erik/phpHVosJK.gif"" class=""post-preview-thumbnail"">
                </a>
                <h2 class=""post-preview-titlecontainer"">
                    <a href=""#"" class=""post-preview-title"">Pawns moves</a>
                </h2>
                <p class=""post-preview-excerpt"">
                    Pawns can move forward one square, if that square is unoccupied. If it ha");
                WriteLiteral(@"s not yet moved, the pawn has the option of moving two squares forward provided both squares in front of the pawn are unoccupied. A pawn cannot move backward. Pawns are the only pieces that capture differently from how they move. They can capture an enemy piece on either of the two spaces adjacent to the space in front of them (i.e., the two squares diagonally in front of them) but cannot move to these spaces if they are vacant. The pawn is also involved in the two special moves en passant and promotion.
                </p>
            </acticle>
        </div>
    </main>

    <script>
        function UserLoggedCheck() {
            const USER_INFO = document.querySelector('.userInfo');
            const USER_INFO_USERNAME = document.querySelector('.userInfo_userName');
            const PLAY_BTN = document.querySelector('.playBtn');
            const USER_AUTHORIZATION = document.querySelector('.userAuthorization');

            if (localStorage.getItem('token')) {
                let info =");
                WriteLiteral(@" parseJwt(localStorage.getItem('token'));

                USER_INFO.style.display = '';
                USER_INFO_USERNAME.innerHTML = `<p>${info.userName}</p>`;
                PLAY_BTN.classList.remove('disabled');
                USER_AUTHORIZATION.style.display = 'none';
            }
            else {
                PLAY_BTN.classList.add('disabled');
                USER_INFO.style.display = 'none';
                USER_AUTHORIZATION.style.display = '';
            }
        }

        UserLoggedCheck();

        function StartAbout() {
            window.location.replace('./info');
        }

        function StartPlay() {
            window.location.replace('./game');
        }

        function EbaloGeki() {
            window.location.replace('./index');
        }

        function parseJwt(token) {
            var base64Url = token.split('.')[1];
            var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            var jsonPayload = decodeURICompone");
                WriteLiteral(@"nt(atob(base64).split('').map(function (c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));

            console.log(JSON.parse(jsonPayload));

            return JSON.parse(jsonPayload);
        };

    </script>
    <script src=""https://kit.fontawesome.com/9135621f22.js"" crossorigin=""anonymous""></script>
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"" crossorigin=""anonymous""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_rules> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_rules> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_rules>)PageContext?.ViewData;
        public Pages_rules Model => ViewData.Model;
    }
}
#pragma warning restore 1591
